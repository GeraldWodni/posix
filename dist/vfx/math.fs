\ This file has been generated using SWIG and fsi,
\ and is already platform dependent, search for the corresponding
\ fsi-file to compile it where no one has compiled it before ;)
\ Forth systems have their own own dynamic loader and don't need addional C-Code.
\ That's why this file will just print normal forth-code once compiled
\ and can be used directly with include or require.
\ As all comments are stripped during the compilation, please
\ insert the copyright notice of the original file here.

\ ----===< prefix >===-----
( none )

\ ----===< int constants >===-----
#1	constant _MATH_H

\ ---===< float constants >===----
+Inf	fconstant HUGE_VAL
2.718282e0	fconstant M_E
1.442695e0	fconstant M_LOG2E
0.434294e0	fconstant M_LOG10E
0.693147e0	fconstant M_LN2
2.302585e0	fconstant M_LN10
3.141593e0	fconstant M_PI
1.570796e0	fconstant M_PI_2
0.785398e0	fconstant M_PI_4
0.318310e0	fconstant M_1_PI
0.636620e0	fconstant M_2_PI
1.128379e0	fconstant M_2_SQRTPI
1.414214e0	fconstant M_SQRT2
0.707107e0	fconstant M_SQRT1_2

\ --------===< enums >===---------
#0	constant FP_NAN
#1	constant FP_INFINITE
#2	constant FP_ZERO
#3	constant FP_SUBNORMAL
#4	constant FP_NORMAL

\ ------===< functions >===-------
EXTERN: "C" double acos( double  );	( <noname> -- )
EXTERN: "C" float acosf( float  );	( <noname> -- )
EXTERN: "C" double acosh( double  );	( <noname> -- )
EXTERN: "C" float acoshf( float  );	( <noname> -- )
EXTERN: "C" double acoshl( double  );	( <noname> -- )
EXTERN: "C" double acosl( double  );	( <noname> -- )
EXTERN: "C" double asin( double  );	( <noname> -- )
EXTERN: "C" float asinf( float  );	( <noname> -- )
EXTERN: "C" double asinh( double  );	( <noname> -- )
EXTERN: "C" float asinhf( float  );	( <noname> -- )
EXTERN: "C" double asinhl( double  );	( <noname> -- )
EXTERN: "C" double asinl( double  );	( <noname> -- )
EXTERN: "C" double atan( double  );	( <noname> -- )
EXTERN: "C" double atan2( double , double  );	( <noname> <noname> -- )
EXTERN: "C" float atan2f( float , float  );	( <noname> <noname> -- )
EXTERN: "C" double atan2l( double , double  );	( <noname> <noname> -- )
EXTERN: "C" float atanf( float  );	( <noname> -- )
EXTERN: "C" double atanh( double  );	( <noname> -- )
EXTERN: "C" float atanhf( float  );	( <noname> -- )
EXTERN: "C" double atanhl( double  );	( <noname> -- )
EXTERN: "C" double atanl( double  );	( <noname> -- )
EXTERN: "C" double cbrt( double  );	( <noname> -- )
EXTERN: "C" float cbrtf( float  );	( <noname> -- )
EXTERN: "C" double cbrtl( double  );	( <noname> -- )
EXTERN: "C" double ceil( double  );	( <noname> -- )
EXTERN: "C" float ceilf( float  );	( <noname> -- )
EXTERN: "C" double ceill( double  );	( <noname> -- )
EXTERN: "C" double copysign( double , double  );	( <noname> <noname> -- )
EXTERN: "C" float copysignf( float , float  );	( <noname> <noname> -- )
EXTERN: "C" double copysignl( double , double  );	( <noname> <noname> -- )
EXTERN: "C" double cos( double  );	( <noname> -- )
EXTERN: "C" float cosf( float  );	( <noname> -- )
EXTERN: "C" double cosh( double  );	( <noname> -- )
EXTERN: "C" float coshf( float  );	( <noname> -- )
EXTERN: "C" double coshl( double  );	( <noname> -- )
EXTERN: "C" double cosl( double  );	( <noname> -- )
EXTERN: "C" double erf( double  );	( <noname> -- )
EXTERN: "C" double erfc( double  );	( <noname> -- )
EXTERN: "C" float erfcf( float  );	( <noname> -- )
EXTERN: "C" double erfcl( double  );	( <noname> -- )
EXTERN: "C" float erff( float  );	( <noname> -- )
EXTERN: "C" double erfl( double  );	( <noname> -- )
EXTERN: "C" double exp( double  );	( <noname> -- )
EXTERN: "C" double exp2( double  );	( <noname> -- )
EXTERN: "C" float exp2f( float  );	( <noname> -- )
EXTERN: "C" double exp2l( double  );	( <noname> -- )
EXTERN: "C" float expf( float  );	( <noname> -- )
EXTERN: "C" double expl( double  );	( <noname> -- )
EXTERN: "C" double expm1( double  );	( <noname> -- )
EXTERN: "C" float expm1f( float  );	( <noname> -- )
EXTERN: "C" double expm1l( double  );	( <noname> -- )
EXTERN: "C" double fabs( double  );	( <noname> -- )
EXTERN: "C" float fabsf( float  );	( <noname> -- )
EXTERN: "C" double fabsl( double  );	( <noname> -- )
EXTERN: "C" double fdim( double , double  );	( <noname> <noname> -- )
EXTERN: "C" float fdimf( float , float  );	( <noname> <noname> -- )
EXTERN: "C" double fdiml( double , double  );	( <noname> <noname> -- )
EXTERN: "C" double floor( double  );	( <noname> -- )
EXTERN: "C" float floorf( float  );	( <noname> -- )
EXTERN: "C" double floorl( double  );	( <noname> -- )
EXTERN: "C" double fma( double , double , double  );	( <noname> <noname> <noname> -- )
EXTERN: "C" float fmaf( float , float , float  );	( <noname> <noname> <noname> -- )
EXTERN: "C" double fmal( double , double , double  );	( <noname> <noname> <noname> -- )
EXTERN: "C" double fmax( double , double  );	( <noname> <noname> -- )
EXTERN: "C" float fmaxf( float , float  );	( <noname> <noname> -- )
EXTERN: "C" double fmaxl( double , double  );	( <noname> <noname> -- )
EXTERN: "C" double fmin( double , double  );	( <noname> <noname> -- )
EXTERN: "C" float fminf( float , float  );	( <noname> <noname> -- )
EXTERN: "C" double fminl( double , double  );	( <noname> <noname> -- )
EXTERN: "C" double fmod( double , double  );	( <noname> <noname> -- )
EXTERN: "C" float fmodf( float , float  );	( <noname> <noname> -- )
EXTERN: "C" double fmodl( double , double  );	( <noname> <noname> -- )
EXTERN: "C" double frexp( double , void *  );	( <noname> <noname> -- )
EXTERN: "C" float frexpf( float , void *  );	( <noname> <noname> -- )
EXTERN: "C" double frexpl( double , void *  );	( <noname> <noname> -- )
EXTERN: "C" double hypot( double , double  );	( <noname> <noname> -- )
EXTERN: "C" float hypotf( float , float  );	( <noname> <noname> -- )
EXTERN: "C" double hypotl( double , double  );	( <noname> <noname> -- )
EXTERN: "C" int ilogb( double  );	( <noname> -- )
EXTERN: "C" int ilogbf( float  );	( <noname> -- )
EXTERN: "C" int ilogbl( double  );	( <noname> -- )
EXTERN: "C" double j0( double  );	( <noname> -- )
EXTERN: "C" double j1( double  );	( <noname> -- )
EXTERN: "C" double jn( int , double  );	( <noname> <noname> -- )
EXTERN: "C" double ldexp( double , int  );	( <noname> <noname> -- )
EXTERN: "C" float ldexpf( float , int  );	( <noname> <noname> -- )
EXTERN: "C" double ldexpl( double , int  );	( <noname> <noname> -- )
EXTERN: "C" double lgamma( double  );	( <noname> -- )
EXTERN: "C" float lgammaf( float  );	( <noname> -- )
EXTERN: "C" double lgammal( double  );	( <noname> -- )
EXTERN: "C" long long llrint( double  );	( <noname> -- )
EXTERN: "C" long long llrintf( float  );	( <noname> -- )
EXTERN: "C" long long llrintl( double  );	( <noname> -- )
EXTERN: "C" long long llround( double  );	( <noname> -- )
EXTERN: "C" long long llroundf( float  );	( <noname> -- )
EXTERN: "C" long long llroundl( double  );	( <noname> -- )
EXTERN: "C" double log( double  );	( <noname> -- )
EXTERN: "C" double log10( double  );	( <noname> -- )
EXTERN: "C" float log10f( float  );	( <noname> -- )
EXTERN: "C" double log10l( double  );	( <noname> -- )
EXTERN: "C" double log1p( double  );	( <noname> -- )
EXTERN: "C" float log1pf( float  );	( <noname> -- )
EXTERN: "C" double log1pl( double  );	( <noname> -- )
EXTERN: "C" double log2( double  );	( <noname> -- )
EXTERN: "C" float log2f( float  );	( <noname> -- )
EXTERN: "C" double log2l( double  );	( <noname> -- )
EXTERN: "C" double logb( double  );	( <noname> -- )
EXTERN: "C" float logbf( float  );	( <noname> -- )
EXTERN: "C" double logbl( double  );	( <noname> -- )
EXTERN: "C" float logf( float  );	( <noname> -- )
EXTERN: "C" double logl( double  );	( <noname> -- )
EXTERN: "C" long lrint( double  );	( <noname> -- )
EXTERN: "C" long lrintf( float  );	( <noname> -- )
EXTERN: "C" long lrintl( double  );	( <noname> -- )
EXTERN: "C" long lround( double  );	( <noname> -- )
EXTERN: "C" long lroundf( float  );	( <noname> -- )
EXTERN: "C" long lroundl( double  );	( <noname> -- )
EXTERN: "C" double modf( double , void *  );	( <noname> <noname> -- )
EXTERN: "C" float modff( float , void *  );	( <noname> <noname> -- )
EXTERN: "C" double modfl( double , void *  );	( <noname> <noname> -- )
EXTERN: "C" double nan( char *  );	( <noname> -- )
EXTERN: "C" float nanf( char *  );	( <noname> -- )
EXTERN: "C" double nanl( char *  );	( <noname> -- )
EXTERN: "C" double nearbyint( double  );	( <noname> -- )
EXTERN: "C" float nearbyintf( float  );	( <noname> -- )
EXTERN: "C" double nearbyintl( double  );	( <noname> -- )
EXTERN: "C" double nextafter( double , double  );	( <noname> <noname> -- )
EXTERN: "C" float nextafterf( float , float  );	( <noname> <noname> -- )
EXTERN: "C" double nextafterl( double , double  );	( <noname> <noname> -- )
EXTERN: "C" double nexttoward( double , double  );	( <noname> <noname> -- )
EXTERN: "C" float nexttowardf( float , double  );	( <noname> <noname> -- )
EXTERN: "C" double nexttowardl( double , double  );	( <noname> <noname> -- )
EXTERN: "C" double pow( double , double  );	( <noname> <noname> -- )
EXTERN: "C" float powf( float , float  );	( <noname> <noname> -- )
EXTERN: "C" double powl( double , double  );	( <noname> <noname> -- )
EXTERN: "C" double remainder( double , double  );	( <noname> <noname> -- )
EXTERN: "C" float remainderf( float , float  );	( <noname> <noname> -- )
EXTERN: "C" double remainderl( double , double  );	( <noname> <noname> -- )
EXTERN: "C" double remquo( double , double , void *  );	( <noname> <noname> <noname> -- )
EXTERN: "C" float remquof( float , float , void *  );	( <noname> <noname> <noname> -- )
EXTERN: "C" double remquol( double , double , void *  );	( <noname> <noname> <noname> -- )
EXTERN: "C" double rint( double  );	( <noname> -- )
EXTERN: "C" float rintf( float  );	( <noname> -- )
EXTERN: "C" double rintl( double  );	( <noname> -- )
EXTERN: "C" double round( double  );	( <noname> -- )
EXTERN: "C" float roundf( float  );	( <noname> -- )
EXTERN: "C" double roundl( double  );	( <noname> -- )
EXTERN: "C" double scalbln( double , long  );	( <noname> <noname> -- )
EXTERN: "C" float scalblnf( float , long  );	( <noname> <noname> -- )
EXTERN: "C" double scalblnl( double , long  );	( <noname> <noname> -- )
EXTERN: "C" double scalbn( double , int  );	( <noname> <noname> -- )
EXTERN: "C" float scalbnf( float , int  );	( <noname> <noname> -- )
EXTERN: "C" double scalbnl( double , int  );	( <noname> <noname> -- )
EXTERN: "C" double sin( double  );	( <noname> -- )
EXTERN: "C" float sinf( float  );	( <noname> -- )
EXTERN: "C" double sinh( double  );	( <noname> -- )
EXTERN: "C" float sinhf( float  );	( <noname> -- )
EXTERN: "C" double sinhl( double  );	( <noname> -- )
EXTERN: "C" double sinl( double  );	( <noname> -- )
EXTERN: "C" double sqrt( double  );	( <noname> -- )
EXTERN: "C" float sqrtf( float  );	( <noname> -- )
EXTERN: "C" double sqrtl( double  );	( <noname> -- )
EXTERN: "C" double tan( double  );	( <noname> -- )
EXTERN: "C" float tanf( float  );	( <noname> -- )
EXTERN: "C" double tanh( double  );	( <noname> -- )
EXTERN: "C" float tanhf( float  );	( <noname> -- )
EXTERN: "C" double tanhl( double  );	( <noname> -- )
EXTERN: "C" double tanl( double  );	( <noname> -- )
EXTERN: "C" double tgamma( double  );	( <noname> -- )
EXTERN: "C" float tgammaf( float  );	( <noname> -- )
EXTERN: "C" double tgammal( double  );	( <noname> -- )
EXTERN: "C" double trunc( double  );	( <noname> -- )
EXTERN: "C" float truncf( float  );	( <noname> -- )
EXTERN: "C" double truncl( double  );	( <noname> -- )
EXTERN: "C" double y0( double  );	( <noname> -- )
EXTERN: "C" double y1( double  );	( <noname> -- )
EXTERN: "C" double yn( int , double  );	( <noname> <noname> -- )

\ ----===< postfix >===-----
( none )
